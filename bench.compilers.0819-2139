-*- mode: compilation; default-directory: "~/documents/mit/plv/koika/etc/" -*-
Comint started at Wed Aug 19 21:29:29

./bench.sh 
+ SIMS='cuttlesim verilator verilator-bluespec'
+ SIMS='cuttlesim verilator'
+ bench_compilers rv32i primes cuttlesim verilator
+ for compiler in "clang++" "g++-9" "g++-10"
+ for simulator in ${@:3}
+ bench_rv_1 clang++ cuttlesim rv32i primes
+ compiler=clang++
+ simulator=cuttlesim
+ design=rv32i
+ test=primes
++ realpath ../examples/rv/_objects/rv32i.v/
+ base=/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v
++ realpath ../examples/rv/tests/_build/rv32i/integ/
+ tests=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ
+ b='bench clang++ cuttlesim rv32i-primes'
+ make -C /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v clean
make: Entering directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
rm -rf obj_dir.opt
rm -rf obj_dir.trace
rm -f rvcore.verilator.vcd
rm -f rvcore.cuttlesim.opt
rm -f rvcore.cuttlesim.debug
rm -f rvcore.cuttlesim.perf
rm -f rvcore.cuttlesim.cov
rm -f rvcore.cuttlesim.s
rm -f rvcore.cuttlesim.out
rm -f rvcore.cuttlesim.vcd
rm -f rvcore.cuttlesim.perf.data
rm -f rvcore.cuttlesim.callgrind
rm -fr rvcore.cuttlesim.rr
rm -f *.gcov
rm -f top_ice40_usb.json
rm -f top_ice40_usb.json.log
rm -f top_ice40_usb.asc
rm -f top_ice40_usb.bin
rm -f top_ice40_usb.rpt
rm -f top_ice40_usb.json.v
make: Leaving directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
+ case $simulator in
+ make CXX=clang++ -C /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v rvcore.cuttlesim.opt
make: Entering directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
clang++ --std=c++17  -Wall -Wextra '-DSIM_VCD_SCOPES={"TOP", "top", "rv_core",}' -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector rvcore.cuttlesim.cpp -o "rvcore.cuttlesim.opt"
In file included from rvcore.cuttlesim.cpp:5:
In file included from ./rv32.hpp:10:
./cuttlesim.hpp:87:9: warning: Bignum truncation is broken in Boost < 1.68; if you run into issues, try
      upgrading. [-W#pragma-messages]
#pragma message("Bignum truncation is broken in Boost < 1.68; if you run into issues, try upgrading.")
        ^
1 warning generated.
make: Leaving directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
+ bench clang++ cuttlesim rv32i-primes /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
+ compiler=clang++
+ simulator=cuttlesim
+ input=rv32i-primes
+ export 'TIMEFORMAT=>> clang++	cuttlesim	rv32i-primes	real: %3R	user: %3U	sys: %3S'
+ TIMEFORMAT='>> clang++	cuttlesim	rv32i-primes	real: %3R	user: %3U	sys: %3S'
+ echo '<< cuttlesim rv32i-primes'
<< cuttlesim rv32i-primes
++ seq 1 10
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> clang++	cuttlesim	rv32i-primes	real: 3.691	user: 3.690	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> clang++	cuttlesim	rv32i-primes	real: 4.135	user: 4.134	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> clang++	cuttlesim	rv32i-primes	real: 3.710	user: 3.701	sys: 0.008
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> clang++	cuttlesim	rv32i-primes	real: 3.700	user: 3.700	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> clang++	cuttlesim	rv32i-primes	real: 3.662	user: 3.646	sys: 0.008
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> clang++	cuttlesim	rv32i-primes	real: 3.919	user: 3.914	sys: 0.004
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> clang++	cuttlesim	rv32i-primes	real: 3.723	user: 3.721	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> clang++	cuttlesim	rv32i-primes	real: 3.673	user: 3.661	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> clang++	cuttlesim	rv32i-primes	real: 3.721	user: 3.719	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> clang++	cuttlesim	rv32i-primes	real: 3.683	user: 3.683	sys: 0.000
+ for simulator in ${@:3}
+ bench_rv_1 clang++ verilator rv32i primes
+ compiler=clang++
+ simulator=verilator
+ design=rv32i
+ test=primes
++ realpath ../examples/rv/_objects/rv32i.v/
+ base=/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v
++ realpath ../examples/rv/tests/_build/rv32i/integ/
+ tests=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ
+ b='bench clang++ verilator rv32i-primes'
+ make -C /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v clean
make: Entering directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
rm -rf obj_dir.opt
rm -rf obj_dir.trace
rm -f rvcore.verilator.vcd
rm -f rvcore.cuttlesim.opt
rm -f rvcore.cuttlesim.debug
rm -f rvcore.cuttlesim.perf
rm -f rvcore.cuttlesim.cov
rm -f rvcore.cuttlesim.s
rm -f rvcore.cuttlesim.out
rm -f rvcore.cuttlesim.vcd
rm -f rvcore.cuttlesim.perf.data
rm -f rvcore.cuttlesim.callgrind
rm -fr rvcore.cuttlesim.rr
rm -f *.gcov
rm -f top_ice40_usb.json
rm -f top_ice40_usb.json.log
rm -f top_ice40_usb.asc
rm -f top_ice40_usb.bin
rm -f top_ice40_usb.rpt
rm -f top_ice40_usb.json.v
make: Leaving directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
+ case $simulator in
+ make CXX=clang++ -C /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v obj_dir.opt/Vtop
make: Entering directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
verilator +define+MEM_ADDRESS_WIDTH=14 +define+BRAM_RUNTIME_INIT+SIMULATION -CFLAGS -DVL_USER_FINISH -Wno-fatal -CFLAGS "-I /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v" --prefix Vtop --cc --exe --compiler clang -CFLAGS -fPIC --Mdir obj_dir.opt --x-assign fast --x-initial fast --noassert -O3 -CFLAGS '-O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector ' -LDFLAGS '-O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector ' rvcore.verilator.cpp top.v
make -C obj_dir.opt -f Vtop.mk Vtop
make[1]: Entering directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt'
clang++  -I.  -MMD -I/usr/local/share/verilator/include -I/usr/local/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=0 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable -Wno-shadow     -DVL_USER_FINISH -I /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v -fPIC -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector   -c -o rvcore.o ../rvcore.verilator.cpp
warning: unknown warning option '-Wno-unused-but-set-variable'; did you mean
      '-Wno-unused-const-variable'? [-Wunknown-warning-option]
1 warning generated.
clang++  -I.  -MMD -I/usr/local/share/verilator/include -I/usr/local/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=0 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable -Wno-shadow     -DVL_USER_FINISH -I /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v -fPIC -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector   -c -o verilated.o /usr/local/share/verilator/include/verilated.cpp
warning: unknown warning option '-Wno-unused-but-set-variable'; did you mean
      '-Wno-unused-const-variable'? [-Wunknown-warning-option]
1 warning generated.
clang++  -I.  -MMD -I/usr/local/share/verilator/include -I/usr/local/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=0 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable -Wno-shadow     -DVL_USER_FINISH -I /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v -fPIC -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector   -c -o verilated_dpi.o /usr/local/share/verilator/include/verilated_dpi.cpp
warning: unknown warning option '-Wno-unused-but-set-variable'; did you mean
      '-Wno-unused-const-variable'? [-Wunknown-warning-option]
1 warning generated.
/usr/bin/perl /usr/local/share/verilator/bin/verilator_includer -DVL_INCLUDE_OPT=include Vtop.cpp Vtop_top.cpp Vtop_rv32.cpp > Vtop__ALLcls.cpp
clang++  -I.  -MMD -I/usr/local/share/verilator/include -I/usr/local/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=0 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable -Wno-shadow     -DVL_USER_FINISH -I /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v -fPIC -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector   -c -o Vtop__ALLcls.o Vtop__ALLcls.cpp
warning: unknown warning option '-Wno-unused-but-set-variable'; did you mean
      '-Wno-unused-const-variable'? [-Wunknown-warning-option]
1 warning generated.
/usr/bin/perl /usr/local/share/verilator/bin/verilator_includer -DVL_INCLUDE_OPT=include Vtop__Dpi.cpp Vtop__Syms.cpp > Vtop__ALLsup.cpp
clang++  -I.  -MMD -I/usr/local/share/verilator/include -I/usr/local/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=0 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable -Wno-shadow     -DVL_USER_FINISH -I /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v -fPIC -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector   -c -o Vtop__ALLsup.o Vtop__ALLsup.cpp
warning: unknown warning option '-Wno-unused-but-set-variable'; did you mean
      '-Wno-unused-const-variable'? [-Wunknown-warning-option]
1 warning generated.
ar -cr Vtop__ALL.a Vtop__ALLcls.o Vtop__ALLsup.o
ranlib Vtop__ALL.a
g++    rvcore.o verilated.o verilated_dpi.o Vtop__ALL.a   -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector  -o Vtop -lm -lstdc++ 
make[1]: Leaving directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt'
make: Leaving directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
+ bench clang++ verilator rv32i-primes /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
+ compiler=clang++
+ simulator=verilator
+ input=rv32i-primes
+ export 'TIMEFORMAT=>> clang++	verilator	rv32i-primes	real: %3R	user: %3U	sys: %3S'
+ TIMEFORMAT='>> clang++	verilator	rv32i-primes	real: %3R	user: %3U	sys: %3S'
+ echo '<< verilator rv32i-primes'
<< verilator rv32i-primes
++ seq 1 10
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> clang++	verilator	rv32i-primes	real: 9.052	user: 9.042	sys: 0.004
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> clang++	verilator	rv32i-primes	real: 9.147	user: 9.141	sys: 0.004
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> clang++	verilator	rv32i-primes	real: 9.163	user: 9.098	sys: 0.016
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> clang++	verilator	rv32i-primes	real: 9.223	user: 9.204	sys: 0.008
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> clang++	verilator	rv32i-primes	real: 9.102	user: 9.033	sys: 0.008
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> clang++	verilator	rv32i-primes	real: 9.086	user: 9.086	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> clang++	verilator	rv32i-primes	real: 9.080	user: 9.059	sys: 0.004
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> clang++	verilator	rv32i-primes	real: 8.996	user: 8.995	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> clang++	verilator	rv32i-primes	real: 9.096	user: 9.094	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> clang++	verilator	rv32i-primes	real: 9.084	user: 8.936	sys: 0.032
+ for compiler in "clang++" "g++-9" "g++-10"
+ for simulator in ${@:3}
+ bench_rv_1 g++-9 cuttlesim rv32i primes
+ compiler=g++-9
+ simulator=cuttlesim
+ design=rv32i
+ test=primes
++ realpath ../examples/rv/_objects/rv32i.v/
+ base=/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v
++ realpath ../examples/rv/tests/_build/rv32i/integ/
+ tests=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ
+ b='bench g++-9 cuttlesim rv32i-primes'
+ make -C /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v clean
make: Entering directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
rm -rf obj_dir.opt
rm -rf obj_dir.trace
rm -f rvcore.verilator.vcd
rm -f rvcore.cuttlesim.opt
rm -f rvcore.cuttlesim.debug
rm -f rvcore.cuttlesim.perf
rm -f rvcore.cuttlesim.cov
rm -f rvcore.cuttlesim.s
rm -f rvcore.cuttlesim.out
rm -f rvcore.cuttlesim.vcd
rm -f rvcore.cuttlesim.perf.data
rm -f rvcore.cuttlesim.callgrind
rm -fr rvcore.cuttlesim.rr
rm -f *.gcov
rm -f top_ice40_usb.json
rm -f top_ice40_usb.json.log
rm -f top_ice40_usb.asc
rm -f top_ice40_usb.bin
rm -f top_ice40_usb.rpt
rm -f top_ice40_usb.json.v
make: Leaving directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
+ case $simulator in
+ make CXX=g++-9 -C /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v rvcore.cuttlesim.opt
make: Entering directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
g++-9 --std=c++17  -Wall -Wextra '-DSIM_VCD_SCOPES={"TOP", "top", "rv_core",}' -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector rvcore.cuttlesim.cpp -o "rvcore.cuttlesim.opt"
In file included from rv32.hpp:10,
                 from rvcore.cuttlesim.cpp:5:
cuttlesim.hpp:87:102: note: #pragma message: Bignum truncation is broken in Boost < 1.68; if you run into issues, try upgrading.
   87 | #pragma message("Bignum truncation is broken in Boost < 1.68; if you run into issues, try upgrading.")
      |                                                                                                      ^
make: Leaving directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
+ bench g++-9 cuttlesim rv32i-primes /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
+ compiler=g++-9
+ simulator=cuttlesim
+ input=rv32i-primes
+ export 'TIMEFORMAT=>> g++-9	cuttlesim	rv32i-primes	real: %3R	user: %3U	sys: %3S'
+ TIMEFORMAT='>> g++-9	cuttlesim	rv32i-primes	real: %3R	user: %3U	sys: %3S'
+ echo '<< cuttlesim rv32i-primes'
<< cuttlesim rv32i-primes
++ seq 1 10
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> g++-9	cuttlesim	rv32i-primes	real: 4.012	user: 4.012	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> g++-9	cuttlesim	rv32i-primes	real: 3.933	user: 3.929	sys: 0.004
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> g++-9	cuttlesim	rv32i-primes	real: 3.976	user: 3.975	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> g++-9	cuttlesim	rv32i-primes	real: 3.976	user: 3.908	sys: 0.012
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> g++-9	cuttlesim	rv32i-primes	real: 3.948	user: 3.948	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> g++-9	cuttlesim	rv32i-primes	real: 3.919	user: 3.919	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> g++-9	cuttlesim	rv32i-primes	real: 3.966	user: 3.966	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> g++-9	cuttlesim	rv32i-primes	real: 3.950	user: 3.942	sys: 0.004
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> g++-9	cuttlesim	rv32i-primes	real: 3.955	user: 3.955	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> g++-9	cuttlesim	rv32i-primes	real: 3.973	user: 3.952	sys: 0.008
+ for simulator in ${@:3}
+ bench_rv_1 g++-9 verilator rv32i primes
+ compiler=g++-9
+ simulator=verilator
+ design=rv32i
+ test=primes
++ realpath ../examples/rv/_objects/rv32i.v/
+ base=/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v
++ realpath ../examples/rv/tests/_build/rv32i/integ/
+ tests=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ
+ b='bench g++-9 verilator rv32i-primes'
+ make -C /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v clean
make: Entering directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
rm -rf obj_dir.opt
rm -rf obj_dir.trace
rm -f rvcore.verilator.vcd
rm -f rvcore.cuttlesim.opt
rm -f rvcore.cuttlesim.debug
rm -f rvcore.cuttlesim.perf
rm -f rvcore.cuttlesim.cov
rm -f rvcore.cuttlesim.s
rm -f rvcore.cuttlesim.out
rm -f rvcore.cuttlesim.vcd
rm -f rvcore.cuttlesim.perf.data
rm -f rvcore.cuttlesim.callgrind
rm -fr rvcore.cuttlesim.rr
rm -f *.gcov
rm -f top_ice40_usb.json
rm -f top_ice40_usb.json.log
rm -f top_ice40_usb.asc
rm -f top_ice40_usb.bin
rm -f top_ice40_usb.rpt
rm -f top_ice40_usb.json.v
make: Leaving directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
+ case $simulator in
+ make CXX=g++-9 -C /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v obj_dir.opt/Vtop
make: Entering directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
verilator +define+MEM_ADDRESS_WIDTH=14 +define+BRAM_RUNTIME_INIT+SIMULATION -CFLAGS -DVL_USER_FINISH -Wno-fatal -CFLAGS "-I /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v" --prefix Vtop --cc --exe  --Mdir obj_dir.opt --x-assign fast --x-initial fast --noassert -O3 -CFLAGS '-O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector ' -LDFLAGS '-O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector ' rvcore.verilator.cpp top.v
make -C obj_dir.opt -f Vtop.mk Vtop
make[1]: Entering directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt'
g++-9  -I.  -MMD -I/usr/local/share/verilator/include -I/usr/local/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=0 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable -Wno-shadow     -DVL_USER_FINISH -I /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector   -c -o rvcore.o ../rvcore.verilator.cpp
g++-9  -I.  -MMD -I/usr/local/share/verilator/include -I/usr/local/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=0 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable -Wno-shadow     -DVL_USER_FINISH -I /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector   -c -o verilated.o /usr/local/share/verilator/include/verilated.cpp
g++-9  -I.  -MMD -I/usr/local/share/verilator/include -I/usr/local/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=0 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable -Wno-shadow     -DVL_USER_FINISH -I /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector   -c -o verilated_dpi.o /usr/local/share/verilator/include/verilated_dpi.cpp
/usr/bin/perl /usr/local/share/verilator/bin/verilator_includer -DVL_INCLUDE_OPT=include Vtop.cpp Vtop_top.cpp Vtop_rv32.cpp > Vtop__ALLcls.cpp
g++-9  -I.  -MMD -I/usr/local/share/verilator/include -I/usr/local/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=0 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable -Wno-shadow     -DVL_USER_FINISH -I /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector   -c -o Vtop__ALLcls.o Vtop__ALLcls.cpp
/usr/bin/perl /usr/local/share/verilator/bin/verilator_includer -DVL_INCLUDE_OPT=include Vtop__Dpi.cpp Vtop__Syms.cpp > Vtop__ALLsup.cpp
g++-9  -I.  -MMD -I/usr/local/share/verilator/include -I/usr/local/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=0 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable -Wno-shadow     -DVL_USER_FINISH -I /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector   -c -o Vtop__ALLsup.o Vtop__ALLsup.cpp
ar -cr Vtop__ALL.a Vtop__ALLcls.o Vtop__ALLsup.o
ranlib Vtop__ALL.a
g++    rvcore.o verilated.o verilated_dpi.o Vtop__ALL.a   -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector  -o Vtop -lm -lstdc++ 
make[1]: Leaving directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt'
make: Leaving directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
+ bench g++-9 verilator rv32i-primes /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
+ compiler=g++-9
+ simulator=verilator
+ input=rv32i-primes
+ export 'TIMEFORMAT=>> g++-9	verilator	rv32i-primes	real: %3R	user: %3U	sys: %3S'
+ TIMEFORMAT='>> g++-9	verilator	rv32i-primes	real: %3R	user: %3U	sys: %3S'
+ echo '<< verilator rv32i-primes'
<< verilator rv32i-primes
++ seq 1 10
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> g++-9	verilator	rv32i-primes	real: 10.390	user: 10.384	sys: 0.004
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> g++-9	verilator	rv32i-primes	real: 10.302	user: 10.302	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> g++-9	verilator	rv32i-primes	real: 10.233	user: 10.232	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> g++-9	verilator	rv32i-primes	real: 10.272	user: 10.272	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> g++-9	verilator	rv32i-primes	real: 10.275	user: 10.270	sys: 0.004
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> g++-9	verilator	rv32i-primes	real: 10.303	user: 10.299	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> g++-9	verilator	rv32i-primes	real: 10.186	user: 10.186	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> g++-9	verilator	rv32i-primes	real: 10.285	user: 10.280	sys: 0.004
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> g++-9	verilator	rv32i-primes	real: 10.374	user: 10.180	sys: 0.052
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> g++-9	verilator	rv32i-primes	real: 10.409	user: 10.408	sys: 0.000
+ for compiler in "clang++" "g++-9" "g++-10"
+ for simulator in ${@:3}
+ bench_rv_1 g++-10 cuttlesim rv32i primes
+ compiler=g++-10
+ simulator=cuttlesim
+ design=rv32i
+ test=primes
++ realpath ../examples/rv/_objects/rv32i.v/
+ base=/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v
++ realpath ../examples/rv/tests/_build/rv32i/integ/
+ tests=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ
+ b='bench g++-10 cuttlesim rv32i-primes'
+ make -C /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v clean
make: Entering directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
rm -rf obj_dir.opt
rm -rf obj_dir.trace
rm -f rvcore.verilator.vcd
rm -f rvcore.cuttlesim.opt
rm -f rvcore.cuttlesim.debug
rm -f rvcore.cuttlesim.perf
rm -f rvcore.cuttlesim.cov
rm -f rvcore.cuttlesim.s
rm -f rvcore.cuttlesim.out
rm -f rvcore.cuttlesim.vcd
rm -f rvcore.cuttlesim.perf.data
rm -f rvcore.cuttlesim.callgrind
rm -fr rvcore.cuttlesim.rr
rm -f *.gcov
rm -f top_ice40_usb.json
rm -f top_ice40_usb.json.log
rm -f top_ice40_usb.asc
rm -f top_ice40_usb.bin
rm -f top_ice40_usb.rpt
rm -f top_ice40_usb.json.v
make: Leaving directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
+ case $simulator in
+ make CXX=g++-10 -C /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v rvcore.cuttlesim.opt
make: Entering directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
g++-10 --std=c++17  -Wall -Wextra '-DSIM_VCD_SCOPES={"TOP", "top", "rv_core",}' -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector rvcore.cuttlesim.cpp -o "rvcore.cuttlesim.opt"
In file included from rv32.hpp:10,
                 from rvcore.cuttlesim.cpp:5:
cuttlesim.hpp:87:102: note: ‘#pragma message: Bignum truncation is broken in Boost < 1.68; if you run into issues, try upgrading.’
   87 |  message("Bignum truncation is broken in Boost < 1.68; if you run into issues, try upgrading.")
      |                                                                                               ^

make: Leaving directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
+ bench g++-10 cuttlesim rv32i-primes /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
+ compiler=g++-10
+ simulator=cuttlesim
+ input=rv32i-primes
+ export 'TIMEFORMAT=>> g++-10	cuttlesim	rv32i-primes	real: %3R	user: %3U	sys: %3S'
+ TIMEFORMAT='>> g++-10	cuttlesim	rv32i-primes	real: %3R	user: %3U	sys: %3S'
+ echo '<< cuttlesim rv32i-primes'
<< cuttlesim rv32i-primes
++ seq 1 10
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> g++-10	cuttlesim	rv32i-primes	real: 5.582	user: 5.578	sys: 0.004
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> g++-10	cuttlesim	rv32i-primes	real: 5.615	user: 5.536	sys: 0.024
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> g++-10	cuttlesim	rv32i-primes	real: 5.591	user: 5.576	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> g++-10	cuttlesim	rv32i-primes	real: 5.588	user: 5.583	sys: 0.004
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> g++-10	cuttlesim	rv32i-primes	real: 5.544	user: 5.535	sys: 0.008
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> g++-10	cuttlesim	rv32i-primes	real: 5.562	user: 5.557	sys: 0.004
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> g++-10	cuttlesim	rv32i-primes	real: 5.587	user: 5.587	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> g++-10	cuttlesim	rv32i-primes	real: 5.592	user: 5.591	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> g++-10	cuttlesim	rv32i-primes	real: 5.555	user: 5.555	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/rvcore.cuttlesim.opt /home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.rv32 -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
toIMem_data0 = mem_req { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011011000 (0xd8, 216); .data = 32'b0 (0x0, 0); }
toIMem_valid0 = 1'b0 (0x0, 0)
fromIMem_data0 = mem_resp { .byte_en = 4'b0 (0x0, 0); .addr = 32'b00000000000000000000000011010100 (0xd4, 212); .data = 32'b00000000100000010010111000100011 (0x812e23, 8465955); }
fromIMem_valid0 = 1'b1 (0x1, 1)
toDMem_data0 = mem_req { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
toDMem_valid0 = 1'b0 (0x0, 0)
fromDMem_data0 = mem_resp { .byte_en = 4'b1111 (0xf, 15); .addr = 32'b01000000000000000001000000000000 (0x40001000, 1073745920); .data = 32'b0 (0x0, 0); }
fromDMem_valid0 = 1'b1 (0x1, 1)
f2d_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011011000 (0xd8, 216); .ppc = 32'b00000000000000000000000011011100 (0xdc, 220); .epoch = 1'b1 (0x1, 1); }
f2d_valid0 = 1'b1 (0x1, 1)
f2dprim_data0 = fetch_bookkeeping { .pc = 32'b00000000000000000000000011010100 (0xd4, 212); .ppc = 32'b00000000000000000000000011011000 (0xd8, 216); .epoch = 1'b1 (0x1, 1); }
f2dprim_valid0 = 1'b1 (0x1, 1)
d2e_data0 = decode_bookkeeping { .pc = 32'b00000000000000000000000011010000 (0xd0, 208); .ppc = 32'b00000000000000000000000011010100 (0xd4, 212); .epoch = 1'b1 (0x1, 1); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b0 (0x0, 0); .valid_rd = 1'b1 (0x1, 1); .legal = 1'b1 (0x1, 1); .inst = 32'b11111110000000010000000100010011 (0xfe010113, 4261478675); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmI; }; }; .rval1 = 32'b00000000000000111111111111011100 (0x3ffdc, 262108); .rval2 = 32'b0 (0x0, 0); }
d2e_valid0 = 1'b1 (0x1, 1)
e2w_data0 = execute_bookkeeping { .isUnsigned = 1'b0 (0x0, 0); .size = 2'b10 (0x2, 2); .offset = 2'b0 (0x0, 0); .newrd = 32'b0 (0x0, 0); .dInst = decodedInst { .valid_rs1 = 1'b1 (0x1, 1); .valid_rs2 = 1'b1 (0x1, 1); .valid_rd = 1'b0 (0x0, 0); .legal = 1'b1 (0x1, 1); .inst = 32'b00000000111001111010000000100011 (0xe7a023, 15179811); .immediateType = maybe_immType { .valid = 1'b1 (0x1, 1); .data = immType::ImmS; }; }; }
e2w_valid0 = 1'b1 (0x1, 1)
rf_x00_zero = 32'b0 (0x0, 0)
rf_x01_ra = 32'b00000000000000000000000010010000 (0x90, 144)
rf_x02_sp = 32'b00000000000000111111111111011100 (0x3ffdc, 262108)
rf_x03_gp = 32'b0 (0x0, 0)
rf_x04_tp = 32'b0 (0x0, 0)
rf_x05_t0 = 32'b0 (0x0, 0)
rf_x06_t1 = 32'b0 (0x0, 0)
rf_x07_t2 = 32'b0 (0x0, 0)
rf_x08_s0_fp = 32'b00000000000000111111111111111100 (0x3fffc, 262140)
rf_x09_s1 = 32'b0 (0x0, 0)
rf_x10_a0 = 32'b0 (0x0, 0)
rf_x11_a1 = 32'b00000000000000000000000011010000 (0xd0, 208)
rf_x12_a2 = 32'b0 (0x0, 0)
rf_x13_a3 = 32'b0 (0x0, 0)
rf_x14_a4 = 32'b0 (0x0, 0)
rf_x15_a5 = 32'b01000000000000000001000000000000 (0x40001000, 1073745920)
rf_x16_a6 = 32'b0 (0x0, 0)
rf_x17_a7 = 32'b0 (0x0, 0)
rf_x18_s2 = 32'b0 (0x0, 0)
rf_x19_s3 = 32'b0 (0x0, 0)
rf_x20_s4 = 32'b0 (0x0, 0)
rf_x21_s5 = 32'b0 (0x0, 0)
rf_x22_s6 = 32'b0 (0x0, 0)
rf_x23_s7 = 32'b0 (0x0, 0)
rf_x24_s8 = 32'b0 (0x0, 0)
rf_x25_s9 = 32'b0 (0x0, 0)
rf_x26_s10 = 32'b0 (0x0, 0)
rf_x27_s11 = 32'b0 (0x0, 0)
rf_x28_t3 = 32'b0 (0x0, 0)
rf_x29_t4 = 32'b0 (0x0, 0)
rf_x30_t5 = 32'b0 (0x0, 0)
rf_x31_t6 = 32'b0 (0x0, 0)
mulState_valid = 1'b0 (0x0, 0)
mulState_operand1 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_operand2 = 32'b00000000000000000000000000010011 (0x13, 19)
mulState_result = 64'b0000000000000000000000000000000000000000000000000000000101101001 (0x169, 361)
mulState_n_step = 5'b11111 (0x1f, 31)
mulState_finished = 1'b0 (0x0, 0)
scoreboard_x00_zero = 2'b0 (0x0, 0)
scoreboard_x01_ra = 2'b0 (0x0, 0)
scoreboard_x02_sp = 2'b01 (0x1, 1)
scoreboard_x03_gp = 2'b0 (0x0, 0)
scoreboard_x04_tp = 2'b0 (0x0, 0)
scoreboard_x05_t0 = 2'b0 (0x0, 0)
scoreboard_x06_t1 = 2'b0 (0x0, 0)
scoreboard_x07_t2 = 2'b0 (0x0, 0)
scoreboard_x08_s0_fp = 2'b0 (0x0, 0)
scoreboard_x09_s1 = 2'b0 (0x0, 0)
scoreboard_x10_a0 = 2'b0 (0x0, 0)
scoreboard_x11_a1 = 2'b0 (0x0, 0)
scoreboard_x12_a2 = 2'b0 (0x0, 0)
scoreboard_x13_a3 = 2'b0 (0x0, 0)
scoreboard_x14_a4 = 2'b0 (0x0, 0)
scoreboard_x15_a5 = 2'b0 (0x0, 0)
scoreboard_x16_a6 = 2'b0 (0x0, 0)
scoreboard_x17_a7 = 2'b0 (0x0, 0)
scoreboard_x18_s2 = 2'b0 (0x0, 0)
scoreboard_x19_s3 = 2'b0 (0x0, 0)
scoreboard_x20_s4 = 2'b0 (0x0, 0)
scoreboard_x21_s5 = 2'b0 (0x0, 0)
scoreboard_x22_s6 = 2'b0 (0x0, 0)
scoreboard_x23_s7 = 2'b0 (0x0, 0)
scoreboard_x24_s8 = 2'b0 (0x0, 0)
scoreboard_x25_s9 = 2'b0 (0x0, 0)
scoreboard_x26_s10 = 2'b0 (0x0, 0)
scoreboard_x27_s11 = 2'b0 (0x0, 0)
scoreboard_x28_t3 = 2'b0 (0x0, 0)
scoreboard_x29_t4 = 2'b0 (0x0, 0)
scoreboard_x30_t5 = 2'b0 (0x0, 0)
scoreboard_x31_t6 = 2'b0 (0x0, 0)
cycle_count = 32'b00000001011111101111110110000011 (0x17efd83, 25099651)
instr_count = 32'b00000000101000011111100100001100 (0xa1f90c, 10615052)
pc = 32'b00000000000000000000000011011100 (0xdc, 220)
epoch = 1'b1 (0x1, 1)
>> g++-10	cuttlesim	rv32i-primes	real: 5.547	user: 5.543	sys: 0.004
+ for simulator in ${@:3}
+ bench_rv_1 g++-10 verilator rv32i primes
+ compiler=g++-10
+ simulator=verilator
+ design=rv32i
+ test=primes
++ realpath ../examples/rv/_objects/rv32i.v/
+ base=/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v
++ realpath ../examples/rv/tests/_build/rv32i/integ/
+ tests=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ
+ b='bench g++-10 verilator rv32i-primes'
+ make -C /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v clean
make: Entering directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
rm -rf obj_dir.opt
rm -rf obj_dir.trace
rm -f rvcore.verilator.vcd
rm -f rvcore.cuttlesim.opt
rm -f rvcore.cuttlesim.debug
rm -f rvcore.cuttlesim.perf
rm -f rvcore.cuttlesim.cov
rm -f rvcore.cuttlesim.s
rm -f rvcore.cuttlesim.out
rm -f rvcore.cuttlesim.vcd
rm -f rvcore.cuttlesim.perf.data
rm -f rvcore.cuttlesim.callgrind
rm -fr rvcore.cuttlesim.rr
rm -f *.gcov
rm -f top_ice40_usb.json
rm -f top_ice40_usb.json.log
rm -f top_ice40_usb.asc
rm -f top_ice40_usb.bin
rm -f top_ice40_usb.rpt
rm -f top_ice40_usb.json.v
make: Leaving directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
+ case $simulator in
+ make CXX=g++-10 -C /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v obj_dir.opt/Vtop
make: Entering directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
verilator +define+MEM_ADDRESS_WIDTH=14 +define+BRAM_RUNTIME_INIT+SIMULATION -CFLAGS -DVL_USER_FINISH -Wno-fatal -CFLAGS "-I /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v" --prefix Vtop --cc --exe  --Mdir obj_dir.opt --x-assign fast --x-initial fast --noassert -O3 -CFLAGS '-O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector ' -LDFLAGS '-O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector ' rvcore.verilator.cpp top.v
make -C obj_dir.opt -f Vtop.mk Vtop
make[1]: Entering directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt'
g++-10  -I.  -MMD -I/usr/local/share/verilator/include -I/usr/local/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=0 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable -Wno-shadow     -DVL_USER_FINISH -I /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector   -c -o rvcore.o ../rvcore.verilator.cpp
g++-10  -I.  -MMD -I/usr/local/share/verilator/include -I/usr/local/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=0 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable -Wno-shadow     -DVL_USER_FINISH -I /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector   -c -o verilated.o /usr/local/share/verilator/include/verilated.cpp
g++-10  -I.  -MMD -I/usr/local/share/verilator/include -I/usr/local/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=0 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable -Wno-shadow     -DVL_USER_FINISH -I /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector   -c -o verilated_dpi.o /usr/local/share/verilator/include/verilated_dpi.cpp
/usr/bin/perl /usr/local/share/verilator/bin/verilator_includer -DVL_INCLUDE_OPT=include Vtop.cpp Vtop_top.cpp Vtop_rv32.cpp > Vtop__ALLcls.cpp
g++-10  -I.  -MMD -I/usr/local/share/verilator/include -I/usr/local/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=0 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable -Wno-shadow     -DVL_USER_FINISH -I /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector   -c -o Vtop__ALLcls.o Vtop__ALLcls.cpp
/usr/bin/perl /usr/local/share/verilator/bin/verilator_includer -DVL_INCLUDE_OPT=include Vtop__Dpi.cpp Vtop__Syms.cpp > Vtop__ALLsup.cpp
g++-10  -I.  -MMD -I/usr/local/share/verilator/include -I/usr/local/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=0 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable -Wno-shadow     -DVL_USER_FINISH -I /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector   -c -o Vtop__ALLsup.o Vtop__ALLsup.cpp
ar -cr Vtop__ALL.a Vtop__ALLcls.o Vtop__ALLsup.o
ranlib Vtop__ALL.a
g++    rvcore.o verilated.o verilated_dpi.o Vtop__ALL.a   -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -fno-stack-protector  -o Vtop -lm -lstdc++ 
make[1]: Leaving directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt'
make: Leaving directory '/home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v'
+ bench g++-10 verilator rv32i-primes /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
+ compiler=g++-10
+ simulator=verilator
+ input=rv32i-primes
+ export 'TIMEFORMAT=>> g++-10	verilator	rv32i-primes	real: %3R	user: %3U	sys: %3S'
+ TIMEFORMAT='>> g++-10	verilator	rv32i-primes	real: %3R	user: %3U	sys: %3S'
+ echo '<< verilator rv32i-primes'
<< verilator rv32i-primes
++ seq 1 10
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> g++-10	verilator	rv32i-primes	real: 10.478	user: 10.465	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> g++-10	verilator	rv32i-primes	real: 10.433	user: 10.423	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> g++-10	verilator	rv32i-primes	real: 10.426	user: 10.425	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> g++-10	verilator	rv32i-primes	real: 10.453	user: 10.367	sys: 0.012
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> g++-10	verilator	rv32i-primes	real: 10.394	user: 10.392	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> g++-10	verilator	rv32i-primes	real: 10.458	user: 10.342	sys: 0.040
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> g++-10	verilator	rv32i-primes	real: 10.417	user: 10.408	sys: 0.008
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> g++-10	verilator	rv32i-primes	real: 10.448	user: 10.447	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> g++-10	verilator	rv32i-primes	real: 10.352	user: 10.352	sys: 0.000
+ for _ in $(seq 1 $REPEAT)
+ /home/clement/documents/mit/plv/koika/examples/rv/_objects/rv32i.v/obj_dir.opt/Vtop +VMH=/home/clement/documents/mit/plv/koika/examples/rv/tests/_build/rv32i/integ/primes.vmh -1
  +++-+*+---+-+---+-+---+----
  *+-+-----+---+-+---+-----+-
  ----+-+-----+---+-+-----+--
  -+-----+-------+---+-+---+-
  +---+-------------+---+----
  -+-+---------+-+-----+-----
  +---+-----+-----+-+--------
  -+-+---+-+-----------+-----
  ---&--+---+-+---+-----+-+--
  -------+-----+-----+-----+-
  +-----+---+-+&--------+----
  ---------+---+-+---+-------
  ------+-----+---------+-+--
  PASS
>> g++-10	verilator	rv32i-primes	real: 10.362	user: 10.362	sys: 0.000

Comint finished at Wed Aug 19 21:37:11
