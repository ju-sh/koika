diff --git a/Makefile b/Makefile
index dfe7454..eaf6204 100644
--- a/Makefile
+++ b/Makefile
@@ -87,7 +87,8 @@ endef
 define cuttlec_v_recipe_body =
	@rm -f "${BUILD_DIR}/$(<:.v=.vo)"
	dune build "$(<:.v=.vo)"
-	dune exec -- cuttlec "${BUILD_DIR}/$(<:.v=.ml)" -T all -o "$@"
+	dune exec -- cuttlec "${BUILD_DIR}/$(<:.v=.ml)" -T cpp -o "$@"
+	dune exec -- cuttlec "${BUILD_DIR}/$(<:.v=.ml)" -T hpp -o "$@"
 endef

 define cuttlec_lv_template =
diff --git a/examples/dynamic_isolation/etc/rvcore.cuttlesim.cpp b/examples/dynamic_isolation/etc/rvcore.cuttlesim.cpp
index 04cfe68..f612f3b 100644
--- a/examples/dynamic_isolation/etc/rvcore.cuttlesim.cpp
+++ b/examples/dynamic_isolation/etc/rvcore.cuttlesim.cpp
@@ -18,7 +18,7 @@
 #define MEM_DEBUG 0

 bool core0_done = false;
-bool core1_done = false;
+bool core1_done = true;

 bool get_core_done(int core_id) {
   return (core_id ? core1_done : core0_done);
diff --git a/examples/dynamic_isolation/tests/Makefile b/examples/dynamic_isolation/tests/Makefile
index 6193650..549a40d 100644
--- a/examples/dynamic_isolation/tests/Makefile
+++ b/examples/dynamic_isolation/tests/Makefile
@@ -7,14 +7,15 @@ asm_rv32i_sources := $(wildcard riscv_tests/rv32ui/*.S) $(wildcard riscv_tests/r
 c_rv32i_sources := $(wildcard unit/*.c) $(wildcard integ/*.c)
 c_rv32e_sources := $(filter-out $(wildcard integ/rvbench_*),$(c_rv32i_sources))

-#asm_multicore_sources := $(wildcard riscv_tests/rv32ui/*.S) $(wildcard riscv_tests/rv32um/*.S) $(wildcard unit/*.S)
-c_multicore_sources := $(wildcard multicore/*.c)

 asm_rv32i_stems := $(patsubst %.S,$(build)/rv32i/%,$(asm_rv32i_sources))
 c_rv32i_stems := $(patsubst %.c,$(build)/rv32i/%,$(c_rv32i_sources))
 c_rv32e_stems := $(patsubst %.c,$(build)/rv32e/%,$(c_rv32e_sources))

+asm_multicore_sources := $(wildcard password_manager/*.S)
 asm_multicore_stems := $(patsubst %.S,$(build)/multicore/%,$(asm_multicore_sources))
+
+c_multicore_sources := $(wildcard password_manager/*.c)
 c_multicore_stems := $(patsubst %.c,$(build)/multicore/%,$(c_multicore_sources))

 stems := $(c_rv32i_stems) $(c_rv32e_stems) $(asm_rv32i_stems) # $(c_multicore_stems) $(asm_multicore_stems)
@@ -34,14 +35,13 @@ cc32i = $(cc) -T$(build)/rv32i/link.ld -mabi=ilp32
 cc32e = $(cc) -T$(build)/rv32e/link.ld -DRV32E -mabi=ilp32e -march=rv32e
 #cc32m = $(cc) -T$(build)/multicore/multicore_link.ld -mabi=ilp32

-multicore_targets := $(build)/multicore/basic.rv32
-
+multicore_targets := $(build)/multicore/basic.rv32 $(build)/multicore/password_manager/pwd_manager.rv32
 all: $(rv32_targets) $(vmh_targets) $(dump_targets) $(multicore_targets);


 dirpatterns := %/rv32i/ %/rv32i/riscv_tests/rv32ui/ %/rv32i/riscv_tests/rv32um/ %/rv32i/unit/ %/rv32i/integ/ %/rv32e/ %/rv32e/unit/ %/rv32e/integ/

-multicore_dirpatterns := %/multicore/ %/multicore/riscv_tests/rv32ui/ %/multicore/riscv_tests/rv32um/ %/multicore/unit/ %/multicore/integ/ %/multicore/multicore/
+multicore_dirpatterns := %/multicore/ %/multicore/riscv_tests/rv32ui/ %/multicore/riscv_tests/rv32um/ %/multicore/unit/ %/multicore/integ/ %/multicore/password_manager/

 dirs := $(patsubst \%%,$(build)%,$(dirpatterns))

@@ -95,10 +95,7 @@ $(build)/multicore/basic_core0.o: basic_core0.c | $(multicore_dirs)
 $(build)/multicore/basic_core1.o: basic_core1.c | $(multicore_dirs)
	$(cc) -march=rv32i -c $< -o $@

-$(build)/multicore/multicore_mmio0.o: multicore_mmio0.c | $(multicore_dirs)
-	$(cc) -march=rv32i -c $< -o $@
-
-$(build)/multicore/multicore_mmio1.o: multicore_mmio1.c | $(multicore_dirs)
+$(build)/multicore/multicore_mmio%.o: multicore_mmio%.c | $(multicore_dirs)
	$(cc) -march=rv32i -c $< -o $@


@@ -110,6 +107,25 @@ $(build)/multicore/basic.rv32: $(build)/multicore/basic_core0.o $(build)/multico

 #$(build)/multicore/multicore/basic.rv32: multicore/basic_core0.c multicore/basic_core1.c multicore_init.S multicore_mmio.c $(build)/multicore/multicore_link.ld
 #	$(cc32m) -march=$(call iarch,$<) multicore_init.S multicore_mmio.c multicore/basic_core0.c multicore/basic_core1.c -o $@
+#
+#
+# TODO: generalize
+pwd_mngr_dir := $(build)/multicore/password_manager
+
+$(pwd_mngr_dir)/link.ld: link.ld | $(multicore_dirs)
+	$(cc) -E -x c $< | grep -v '^#' > $@
+
+$(pwd_mngr_dir)/multicore_mmio%.o: multicore_mmio%.c | $(multicore_dirs)
+	$(cc) -march=rv32i -c $< -o $@
+
+$(pwd_mngr_dir)/%.o: password_manager/%.c | $(multicore_dirs)
+	$(cc) -march=rv32i -c $< -o $@
+
+$(pwd_mngr_dir)/%.o: password_manager/%.S | $(multicore_dirs)
+	$(cc) -march=rv32i -c $< -o $@
+
+$(pwd_mngr_dir)/pwd_manager.rv32: $(pwd_mngr_dir)/init_enclave0.o $(pwd_mngr_dir)/init_enclave1.o $(pwd_mngr_dir)/enclave0.o $(pwd_mngr_dir)/null.o $(pwd_mngr_dir)/null.o $(pwd_mngr_dir)/enclave2_bootloader.o $(pwd_mngr_dir)/enclave2.o $(pwd_mngr_dir)/multicore_mmio0.o $(pwd_mngr_dir)/multicore_mmio1.o $(pwd_mngr_dir)/multicore_mmio2.o $(pwd_mngr_dir)/link.ld | $(multicore_dirs)
+	cd $(build)/multicore/password_manager; $(cc) -Tlink.ld -mabi=ilp32 -march=rv32i init_enclave0.o enclave0.o init_enclave1.o null.o enclave2_bootloader.o enclave2.o multicore_mmio0.o multicore_mmio1.o multicore_mmio2.o -o pwd_manager.rv32


 $(build)/%.dump: $(build)/%.rv32
