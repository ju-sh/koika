// -*- mode: verilog -*-
// Generated by cuttlec from a KÃ´ika module
module morse(input wire[0:0] CLK, input wire[0:0] RST_N, output wire[0:0] led_arg, input wire[0:0] led_out);
	reg[2:0] tx_state /* verilator public */ = 3'b0;
	reg[47:0] message /* verilator public */ = 48'b000000000000111010110010110010110010111100111010;
	reg[5:0] pointer /* verilator public */ = 6'b0;
	reg[31:0] timer /* verilator public */ = 32'b0;
	reg[0:0] sink_led /* verilator public */ = 1'b0;

	wire[0:0] _cond0 = tx_state == 3'b010;
	wire[31:0] _0 = timer + 32'b00000000000000000000000000000001;
	wire[0:0] _cond1 = $unsigned(_0) < $unsigned(32'b00000000010011000100101101000000);
	wire[0:0] _cond2 = tx_state == 3'b100;
	wire[0:0] _cond3 = $unsigned(_0) < $unsigned(32'b00000000111001001110000111000000);
	wire[0:0] _cond4 = tx_state == 3'b110;
	wire[0:0] _cond5 = $unsigned(_0) < $unsigned(32'b00000000010011000100101101000000);
	wire[0:0] _cond6 = tx_state == 3'b111;
	wire[0:0] _cond7 = $unsigned(_0) < $unsigned(32'b00000000111001001110000111000000);
	wire[0:0] _var_ready0 = tx_state == 3'b0;
	wire[2:0] _1 = message[pointer +: 3];
	wire[0:0] _cond8 = _1 == 3'b0;
	wire[0:0] _if_mux0 = _var_ready0 && _cond8;
	wire[0:0] _wF_print_token0 = ((~(_cond0 ? ~_cond1 : (_cond2 ? ~_cond3 : (_cond4 ? ~_cond5 : _cond6 && ~_cond7))) || ~_if_mux0) && (~(_cond0 ? ~_cond1 : (_cond2 ? ~_cond3 : (_cond4 ? ~_cond5 : _cond6 && ~_cond7))) || ~_if_mux0)) && (~_var_ready0 && (~(_cond0 ? ~_cond1 : (_cond2 ? ~_cond3 : (_cond4 ? ~_cond5 : _cond6 && ~_cond7))) || ~_var_ready0));
	wire[2:0] _if_mux1 = _var_ready0 ? (_cond8 ? message[6'b0 +: 3] : _1) : tx_state;
	wire[5:0] _if_mux2 = _var_ready0 && _cond8 ? 6'b0 : pointer;
	assign led_arg = _cond0 ? _cond1 : _cond2 && _cond3;

	always @(posedge CLK) begin
		if (!RST_N) begin
			tx_state <= 3'b0;
			message <= 48'b000000000000111010110010110010110010111100111010;
			pointer <= 6'b0;
			timer <= 32'b0;
			sink_led <= 1'b0;
		end else begin
			tx_state <= _wF_print_token0 ? (_cond0 ? (_cond1 ? _if_mux1 : 3'b0) : (_cond2 ? (_cond3 ? _if_mux1 : 3'b0) : (_cond4 ? (_cond5 ? _if_mux1 : 3'b0) : (_cond6 && ~_cond7 ? 3'b0 : _if_mux1)))) : _if_mux1;
			message <= message;
			pointer <= _wF_print_token0 ? (_cond0 ? (_cond1 ? _if_mux2 : pointer + 6'b000011) : (_cond2 ? (_cond3 ? _if_mux2 : pointer + 6'b000011) : (_cond4 ? (_cond5 ? _if_mux2 : pointer + 6'b000011) : (_cond6 && ~_cond7 ? pointer + 6'b000011 : _if_mux2)))) : _if_mux2;
			timer <= _wF_print_token0 ? (_cond0 ? (_cond1 ? _0 : 32'b0) : (_cond2 ? (_cond3 ? _0 : 32'b0) : (_cond4 ? (_cond5 ? _0 : 32'b0) : (_cond6 && ~_cond7 ? 32'b0 : _0)))) : timer;
			sink_led <= _wF_print_token0 ? led_out : sink_led;
		end
	end
endmodule
